//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	command "github.com/karmada-io/karmada/pkg/apis/command"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*PolicySelector)(nil), (*command.PolicySelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PolicySelector_To_command_PolicySelector(a.(*PolicySelector), b.(*command.PolicySelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*command.PolicySelector)(nil), (*PolicySelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_command_PolicySelector_To_v1alpha1_PolicySelector(a.(*command.PolicySelector), b.(*PolicySelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Reschedule)(nil), (*command.Reschedule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Reschedule_To_command_Reschedule(a.(*Reschedule), b.(*command.Reschedule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*command.Reschedule)(nil), (*Reschedule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_command_Reschedule_To_v1alpha1_Reschedule(a.(*command.Reschedule), b.(*Reschedule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RescheduleList)(nil), (*command.RescheduleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RescheduleList_To_command_RescheduleList(a.(*RescheduleList), b.(*command.RescheduleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*command.RescheduleList)(nil), (*RescheduleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_command_RescheduleList_To_v1alpha1_RescheduleList(a.(*command.RescheduleList), b.(*RescheduleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RescheduleSpec)(nil), (*command.RescheduleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RescheduleSpec_To_command_RescheduleSpec(a.(*RescheduleSpec), b.(*command.RescheduleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*command.RescheduleSpec)(nil), (*RescheduleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_command_RescheduleSpec_To_v1alpha1_RescheduleSpec(a.(*command.RescheduleSpec), b.(*RescheduleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ResourceSelector)(nil), (*command.ResourceSelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ResourceSelector_To_command_ResourceSelector(a.(*ResourceSelector), b.(*command.ResourceSelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*command.ResourceSelector)(nil), (*ResourceSelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_command_ResourceSelector_To_v1alpha1_ResourceSelector(a.(*command.ResourceSelector), b.(*ResourceSelector), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_PolicySelector_To_command_PolicySelector(in *PolicySelector, out *command.PolicySelector, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1alpha1_PolicySelector_To_command_PolicySelector is an autogenerated conversion function.
func Convert_v1alpha1_PolicySelector_To_command_PolicySelector(in *PolicySelector, out *command.PolicySelector, s conversion.Scope) error {
	return autoConvert_v1alpha1_PolicySelector_To_command_PolicySelector(in, out, s)
}

func autoConvert_command_PolicySelector_To_v1alpha1_PolicySelector(in *command.PolicySelector, out *PolicySelector, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_command_PolicySelector_To_v1alpha1_PolicySelector is an autogenerated conversion function.
func Convert_command_PolicySelector_To_v1alpha1_PolicySelector(in *command.PolicySelector, out *PolicySelector, s conversion.Scope) error {
	return autoConvert_command_PolicySelector_To_v1alpha1_PolicySelector(in, out, s)
}

func autoConvert_v1alpha1_Reschedule_To_command_Reschedule(in *Reschedule, out *command.Reschedule, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_RescheduleSpec_To_command_RescheduleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Reschedule_To_command_Reschedule is an autogenerated conversion function.
func Convert_v1alpha1_Reschedule_To_command_Reschedule(in *Reschedule, out *command.Reschedule, s conversion.Scope) error {
	return autoConvert_v1alpha1_Reschedule_To_command_Reschedule(in, out, s)
}

func autoConvert_command_Reschedule_To_v1alpha1_Reschedule(in *command.Reschedule, out *Reschedule, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_command_RescheduleSpec_To_v1alpha1_RescheduleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_command_Reschedule_To_v1alpha1_Reschedule is an autogenerated conversion function.
func Convert_command_Reschedule_To_v1alpha1_Reschedule(in *command.Reschedule, out *Reschedule, s conversion.Scope) error {
	return autoConvert_command_Reschedule_To_v1alpha1_Reschedule(in, out, s)
}

func autoConvert_v1alpha1_RescheduleList_To_command_RescheduleList(in *RescheduleList, out *command.RescheduleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]command.Reschedule)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_RescheduleList_To_command_RescheduleList is an autogenerated conversion function.
func Convert_v1alpha1_RescheduleList_To_command_RescheduleList(in *RescheduleList, out *command.RescheduleList, s conversion.Scope) error {
	return autoConvert_v1alpha1_RescheduleList_To_command_RescheduleList(in, out, s)
}

func autoConvert_command_RescheduleList_To_v1alpha1_RescheduleList(in *command.RescheduleList, out *RescheduleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Reschedule)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_command_RescheduleList_To_v1alpha1_RescheduleList is an autogenerated conversion function.
func Convert_command_RescheduleList_To_v1alpha1_RescheduleList(in *command.RescheduleList, out *RescheduleList, s conversion.Scope) error {
	return autoConvert_command_RescheduleList_To_v1alpha1_RescheduleList(in, out, s)
}

func autoConvert_v1alpha1_RescheduleSpec_To_command_RescheduleSpec(in *RescheduleSpec, out *command.RescheduleSpec, s conversion.Scope) error {
	out.TargetRefPolicy = *(*[]command.PolicySelector)(unsafe.Pointer(&in.TargetRefPolicy))
	out.TargetRefResource = *(*[]command.ResourceSelector)(unsafe.Pointer(&in.TargetRefResource))
	return nil
}

// Convert_v1alpha1_RescheduleSpec_To_command_RescheduleSpec is an autogenerated conversion function.
func Convert_v1alpha1_RescheduleSpec_To_command_RescheduleSpec(in *RescheduleSpec, out *command.RescheduleSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_RescheduleSpec_To_command_RescheduleSpec(in, out, s)
}

func autoConvert_command_RescheduleSpec_To_v1alpha1_RescheduleSpec(in *command.RescheduleSpec, out *RescheduleSpec, s conversion.Scope) error {
	out.TargetRefPolicy = *(*[]PolicySelector)(unsafe.Pointer(&in.TargetRefPolicy))
	out.TargetRefResource = *(*[]ResourceSelector)(unsafe.Pointer(&in.TargetRefResource))
	return nil
}

// Convert_command_RescheduleSpec_To_v1alpha1_RescheduleSpec is an autogenerated conversion function.
func Convert_command_RescheduleSpec_To_v1alpha1_RescheduleSpec(in *command.RescheduleSpec, out *RescheduleSpec, s conversion.Scope) error {
	return autoConvert_command_RescheduleSpec_To_v1alpha1_RescheduleSpec(in, out, s)
}

func autoConvert_v1alpha1_ResourceSelector_To_command_ResourceSelector(in *ResourceSelector, out *command.ResourceSelector, s conversion.Scope) error {
	out.APIVersion = in.APIVersion
	out.Kind = in.Kind
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1alpha1_ResourceSelector_To_command_ResourceSelector is an autogenerated conversion function.
func Convert_v1alpha1_ResourceSelector_To_command_ResourceSelector(in *ResourceSelector, out *command.ResourceSelector, s conversion.Scope) error {
	return autoConvert_v1alpha1_ResourceSelector_To_command_ResourceSelector(in, out, s)
}

func autoConvert_command_ResourceSelector_To_v1alpha1_ResourceSelector(in *command.ResourceSelector, out *ResourceSelector, s conversion.Scope) error {
	out.APIVersion = in.APIVersion
	out.Kind = in.Kind
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_command_ResourceSelector_To_v1alpha1_ResourceSelector is an autogenerated conversion function.
func Convert_command_ResourceSelector_To_v1alpha1_ResourceSelector(in *command.ResourceSelector, out *ResourceSelector, s conversion.Scope) error {
	return autoConvert_command_ResourceSelector_To_v1alpha1_ResourceSelector(in, out, s)
}
